{"version":3,"sources":["Images/img3.jpg","components/BurgerNav.js","components/About.js","components/Contact.js","components/Faq.js","components/Landing.js","components/Footer.js","components/Resume.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","BurgerNav","useState","open","setOpen","console","log","closeNav","onClick","className","to","smooth","duration","About","id","src","Kev","alt","Contact","type","placeholder","Faq","question","answer","funFact","randomFact","setRandomFact","randomNum","Math","floor","random","factRandom","Landing","href","target","Footer","Resume","class","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4937a834.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/img3.6769538b.jpg\";","import React, {useState} from 'react';\nimport {Link} from 'react-scroll';\nimport { close } from 'fs';\n\nconst BurgerNav = () => {\n    const [open, setOpen] = useState(false);\n    console.log(open)\n\n    const closeNav = () => {\n        setOpen(false)\n    }\n    return (\n        <div>\n            <div onClick={() => setOpen(!open)} className={open ? \"burger open\" : \"burger\"}>\n                <div className={open ? \"bar half start open\" : \"bar half start\"}/>\n                <div className=\"bar\"/>\n                <div className={open ? \"bar half end open\" : \"bar half end\"}/>\n            </div>\n            <nav>\n                <ul className={open ? \"menu open\" : \"menu\"}>\n                    <li>\n                        <Link onClick={() => closeNav()} to=\"about\" smooth={true} duration={1000}>\n                            <span className=\"link-num\">01.</span> \n                            About\n                        </Link>\n                    </li>\n                    <li>\n                        <Link onClick={() => closeNav()} to=\"faq-section\" smooth={true} duration={1000}>\n                            <span className=\"link-num\">02.</span> \n                            F.A.Q\n                        </Link>\n                    </li>\n                    <li>\n                        <Link onClick={() => closeNav()} to=\"contact-num\" smooth={true} duration={1000}>\n                            <span className=\"link-num\">03.</span> \n                            Contact\n                        </Link>\n                    </li>\n                </ul>\n            </nav>\n\n        </div>\n\n    )\n}\n\nexport default BurgerNav;\n","import React from 'react';\nimport Kev from '../Images/img3.jpg';\n\nconst About = () => {\n    return (\n        <div className=\"about\" id=\"about\">\n            <div className=\"img-container\">\n                <img src={Kev} alt=\"Kevin on hiking trip\"/>\n            </div>\n            <div className=\"about-text\">\n                <h4><span className=\"section-num\">01.</span> About Me</h4>\n                <p>Hi there! My name is Kevin Garcia. I was born in Los Angeles and was\n                raised by a beautiful set of parents who\n                immigrated from El Salvador. I recently graduated from the Honors in Psychology Program at California State University\n                of Northridge, and am genuinely happy with my life. Despite this, I realize that there is always room for improvement;\n                which is why I decided to create this website. My hope is to articulate myself, and my skills, much more honestly than\n                I feel a resume would.\n                \n                A few facts about myself include that I love eating churros at Disneyland, I train my body and mind through Brazilian\n                Jiu-Jitsu, and I enjoy photography. All of the photographs on this website (with the exception of the portrait of\n                course) were taken by me. I currently work as an administrative assistant at the University of Los Angeles which you\n                can read more about in my resume provided below.\n                \n                Thank you for taking the time to read this short little passage, and please feel free to email me if you have any\n                questions. I hope you have a great day, and that when you fall asleep tonight your dreams remind you that you live a\n                beautiful life.</p>\n            </div>\n        </div>\n    )\n}\n\nexport default About;\n","import React from 'react';\n\nconst Contact = () => {\n    return (\n        <div className=\"contact\">\n            <div className=\"contact-title\">\n                <h3><span className=\"contact-num\">03.</span>Lets Talk</h3>\n            </div>\n            <div className=\"form-container\">\n                <form>\n                    <input type=\"text\" placeholder=\"Name\"/>\n                    <input type=\"email\" placeholder=\"Email\"/>\n                    <textarea type=\"text\" placeholder=\"Message...\"/>\n                </form>\n                <div className=\"form-btn-container\">\n                    <button className=\"form-btn\">Submit</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Contact;\n","import React, {useState} from 'react';\nimport {GoQuote} from 'react-icons/go';\n\nconst Faq = () => {\n    const [funFact, setFunFact] = useState([\n        {\n            question: 'How would I describe my friendships?',\n            answer: 'I  would describe my friendships as being solar powered. The brighter and strong my friends shine the more energized I feel. Nothing makes me happier in life than seeing those who I love succeed and be happy'\n        },\n        {\n            question: 'What is my favorite color?',\n            answer: 'My favorite color is black, although technically not a color but the absorption of all the colors. Also love how when exposed to light it gets hot, metaphorically I can relate to rising up to the moment'\n        },\n        {\n            question: 'What do I enjoy most about life',\n            answer:'I enjoy being humbled and not in the sense from being arrogant or pompous but from going to places that leave me astonished or meeting people who have perfected/pushed their craft to new limits. No matter how many times I go to Yosemite National park I will always gaze in astonishment at what nature has created. Just as I will always be amazed by meeting humans who know no boundaries but that of their imagination and hard work.'\n        }\n    ])\n    const [randomFact, setRandomFact] = useState(0);\n\n    const factRandom = () => {\n       let randomNum = Math.floor(Math.random() * 3);\n       setRandomFact(randomNum)\n    }\n\n    return (\n        <div className=\"faq-section\">\n            <h4 className=\"faq-title\">\n                <span className=\"faq-title-num\">02.</span>\n                F.A.Q\n            </h4>\n            <div className=\"fun-fact-container\">\n                {\n                    <div className=\"fun-fact\">\n                        <h3>{funFact[`${randomFact}`].question}</h3>\n                        <p>\n                            <span className=\"quote-1\">\n                                <GoQuote/>\n                            </span>\n                                {funFact[`${randomFact}`].answer}\n                            <span className=\"quote-2\">\n                                <GoQuote />\n                            </span>\n                        </p>\n                    </div>\n                }\n            </div>\n            <div className=\"fun-btn-container\">\n                <button className=\"fun-btn\" onClick={() => factRandom()}>\n                    F.A.Q \n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default Faq;\n","import React from 'react'\nimport {BsChevronDoubleDown} from 'react-icons/bs';\nimport {Link} from 'react-scroll';\n\nconst Landing = () => {\n    return (\n        <div className=\"landing-container\">\n            <div className=\"landing\">\n                <div className=\"landing-text\">\n                    <h1>\n                        <span className=\"first-letter\">K</span>evin\n                        <span className=\"first-letter\">G</span>arcia\n                    </h1>\n                    <div className=\"landing-btn-container\">\n                        <button className=\"linked-btn\">\n                            <a href=\"https://www.linkedin.com/in/kdotg/\" target=\"_blank\">Linkedin</a>\n                        </button> \n                        <button className=\"linked-btn\">\n                            <a href=\"https://drive.google.com/file/d/1hF6cbRrarDyQOFiAAkIixWvTr9KlA-Be/view?usp=sharing\" target=\"_blank\">Download Resume</a>\n                        </button> \n                    </div>\n                </div>\n                <div className=\"landing-img\">\n                </div>\n            </div>\n            <Link to=\"about\" smooth={true} duration={1000}>\n                <BsChevronDoubleDown className=\"down-arrow\"/>\n            </Link>\n        </div>\n    )\n}\n\nexport default Landing\n","import React from 'react'\nimport {FaLinkedin} from 'react-icons/fa'\n\nconst Footer = () => {\n    return (\n        <footer>\n            <FaLinkedin className=\"footer-icon\"/>\n            <p>© Kevin Garcia 2020</p>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React from 'react'\n\nconst Resume = () => {\n    return (\n        <div className=\"resume-contianer\">\n            <button class=\"btn\">\n                <a href=\"https://drive.google.com/file/d/1hF6cbRrarDyQOFiAAkIixWvTr9KlA-Be/view?usp=sharing\" target=\"_blank\">\n                    Download Resume\n                </a>\n            </button>\n        </div>\n    )\n}\n\nexport default Resume\n","import React from 'react';\nimport './scss/App.scss';\n\nimport Burger from './components/BurgerNav';\nimport About from './components/About';\nimport Contact from './components/Contact';\nimport Faq from './components/Faq';\nimport Landing from './components/Landing';\nimport Footer from './components/Footer';\nimport Resume from './components/Resume';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Burger />\n\n      <Landing />\n      <About />\n      <Resume/>\n      <Faq />\n      <Contact />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}